# 
# docker-compose-dev.yaml
#

version: '2'

networks:
  bc-dev:

services:

  orderer.example.com:
    extends:
      file:   base/docker-compose-base.yaml
      service: orderer.example.com
    container_name: orderer.example.com
    environment:
      - ORDERER_GENERAL_TLS_ENABLED=false
    networks:
      - bc-dev

  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.org1.example.com
    environment:
      - CORE_PEER_TLS_ENABLED=false
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=db0.org1.example.com:5984
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    command: /bin/bash -c 'sleep 10; peer node start --peer-chaincodedev=true -o orderer.example.com:7050'
    volumes:
       - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - orderer.example.com
      - db0.org1.example.com
    networks:
      - bc-dev

  db0.org1.example.com:
    container_name: db0.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: db0.org1.example.com
    # environment:
    #   - COUCHDB_USER=
    #   - COUCHDB_PASSWORD=
    networks:
      - bc-dev
 
  ca.org1.example.com:
    container_name: ca.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: ca.org1.example.com
    networks:
      - bc-dev

  cli:
    container_name: cli
    extends:
      file:  base/base.yaml
      service: cli-base
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer/scripts
    command: /bin/bash -c 'sleep 20; ./setup_dev.sh'
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincodes/:/opt/gopath/src/chaincodes
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - orderer.example.com
      - peer0.org1.example.com
    networks:
      - bc-dev

  chaincode-runtime:
    container_name: chaincode-runtime
    image: hyperledger/fabric-ccenv:x86_64-${FABRIC_VERSION}
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ID=chaincode
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
      - CORE_CHAINCODE_ID_NAME=mycc:1.0
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer/scripts
    command: /bin/bash -c 'cd /opt/gopath/src/chaincodes/chaincode_example02; go build; ./chaincode_example02'
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincodes/:/opt/gopath/src/chaincodes
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - orderer.example.com
      - peer0.org1.example.com
    networks:
      - bc-dev